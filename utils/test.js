const workerFunction = require("./workerThreads");
const classicFunction = require("./originer_copy");
const fnTest = require("./freqWordsTest");
let start, stop, eta1, eta2;

let strGenome = "TCATGAAGCGCTTTCCGAACGGCGGCACAGAAAGGCGGCGTCCGTCATCAGCCTTCGCGCCCGTCTATGCGGTATTTGGCGCGGTGGCGGCAGCGCCTTTCCTGACGGAATGGCTGCGCGCGCTCGTCGCGGACCATACCCTTCAGGCGGAGACCGCCCTGCACAGGTTGCTTGAGCAGAACATGGATGCAGGCGTGACCGTGTATCCACCGGACACGATGCACTCCCTGTCCGCCCTCCGTCTTTTCCGCCGCGCCGCTCCGACACGCCTTTCATCCCTTGTTCCGCAAGGGACGAGTGTGGTTTACTGGAAAGCGTCTCAGGCAACACGGCGGCACGAAACCACCCTTTCTCCTGACAGCATCATGATCAACGCTTACAGCCAGCCATACAGCGCGCTGGTCTGGAAACACGTACCGGCGGTCAAGACAATTGTCTATCTCTGAGCGGATCAGGAAAAAAATCCGGATGGCGTCATCCCTGAACAGCTTTTCCGGCGTGTCCATTCTTGTCGTTGATACCGGTCGAAAAGGTGAAATGCGGCAGTGCGAGGCGCTGGTTAATGCCTGTGGCCTGCCCTGGCGATTCATTGGAAACGATCTGATTCCCCTTGATGAGCCGATGCTGATCCTGTCCTTCGGCAGGGCGTTGAGGCAGGCATGGCGTCTGAAAGCCGCGTTCGGCGGGCGTCCTCGCATCATCCAGCTCGGGCGTCCGCGTCTGAAAGCGCCATCGGACCTGGATCTGATCCTGCTGATGCCGCAGGACGACTACCCGGAAGGCCCGCAGACGCTGCATCTGAACATGCCGCTGAACGGCGCGGATATCTTACGGCCCGCTATTCCTGTCGATACGACACAAGGACCGGTTTCCGTCCTGCTGGGAGGACCGACCCGTCACTTCGGCTTCAGCAGTCACGATGCAATGGTCCTGCTGTCCCGCGCCGAACGGCTGGCCGCAGCGACGGACACAGAGCTGCGCGTCGTGCCGGGTCCGCGCACGCCGGATCATGTGATGAAAATTGTCGAGGAACGGTACTGTCAGACACCTGACCGCATTGACCGACAACCGCTCTCAACGGTTCTGAAAAAGAGCGGCAGACTGGTGGTGACGTCGGACAGCGCCTCCCTGATCGCCGATGCGTGGCGGACCGGCAAACCGACCTGGCTGTATCCGCTCCCGGTCCGGCTTCCACCCGTCCAGCGCCTGAAGATCATGGCTGACCACATCACGCCGGAACTCCGATACACACTGATCCGGAGAGGCTGGCTCGCCGGCGGCACTGATTTTACCCGCTGGCATCAGGCGCTTGTCCGGCAGGGACTTGTAAGGCCCTTGACGGAACAGGGACTGAAGGAGC"
const nWantedLength = 9;
const nMaxmismatches = 3;

const fileParser = require('./fileParser');



const a = async() =>{

    let objFasta = await fileParser.readFastaFile("../testData/test.fna");
    strGenome = objFasta[0].seq.substring(0,10000);
    console.log(strGenome.length);
    // let r = await fnFrequentWordsWithMismathces("AAAAAAAAAAAAAA", 2, 3)

    console.log("Testing classic:")
    eta1 = 0;
    start = process.hrtime();
    // await fnTest.testAllCases(classicFunction);
    await classicFunction(strGenome, nWantedLength, nMaxmismatches)
    stop = process.hrtime(start);
    eta1 = stop[0] + stop[1] / 1e9;
    console.log(`Classic took: ${eta1} seconds`);

    console.log("Testing worker:")
    eta2 = 0;
    start = process.hrtime();
    // await fnTest.testAllCases(workerFunction);
    await workerFunction(strGenome, nWantedLength, nMaxmismatches)
    stop = process.hrtime(start);
    eta2 = stop[0] + stop[1] / 1e9;
    console.log(`Worker took: ${eta2} seconds`);

    console.log("FA: " + (eta1/eta2));

}

a();